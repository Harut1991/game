{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport GameClass from \"../Classes/Game\";\nimport Flask from \"../Components/Flask\";\nimport WinModal from \"../Components/WinModal\";\nimport jumpBall from \"../../assets/jumpBall.wav\";\nimport ReactHowler from 'react-howler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Game(_ref) {\n  var level = _ref.level,\n      onNext = _ref.onNext,\n      effect = _ref.effect;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jump = _useState4[0],\n      setJump = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkedData = _useState8[0],\n      setCheckedData = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      clickedBall = _useState10[0],\n      setClickedBall = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      config = _useState12[0],\n      setConfig = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      game = _useState14[0],\n      setGame = _useState14[1];\n\n  var init = useCallback(function () {\n    setData({});\n    setCheckedData({});\n    setClickedBall('');\n    setConfig({});\n    var gameClass = new GameClass();\n    gameClass.start(level);\n    setGame(gameClass);\n\n    if (gameClass) {\n      setData(gameClass.data);\n      setConfig(gameClass.currentComplications);\n    }\n  }, [level, setGame, setData, setCheckedData, setClickedBall, setConfig]);\n  var gameHandler = useCallback(function () {\n    if (game) {\n      setData(game.data);\n      setConfig(game.currentComplications);\n    }\n  }, [game, setData]);\n  var dataHandler = useCallback(function () {\n    if (data != null && data.mixedData) {\n      setCheckedData(game.checkWin(data.mixedData, data.flaskTotal));\n    }\n  }, [data, setCheckedData]);\n  var onClickFlask = useCallback(function (index) {\n    setJump(false);\n\n    if (clickedBall === '' && data.mixedData[index].length) {\n      setClickedBall(index);\n    } else if (clickedBall !== '' && clickedBall === index) {\n      setClickedBall('');\n    } else if (clickedBall !== '' && game.canSet(index)) {\n      setJump(effect && true);\n      game.changeData(clickedBall, index);\n      setData(JSON.parse(JSON.stringify(game.data)));\n      setClickedBall('');\n    }\n  }, [clickedBall, data, setClickedBall, setData, game, effect]);\n  var viewData = useMemo(function () {\n    if (data != null && data.mixedData) {\n      return data == null ? void 0 : data.mixedData.map(function (i, index) {\n        return _jsx(Flask, {\n          clickedBall: clickedBall === index,\n          isSuccess: checkedData[index],\n          onClick: function onClick() {\n            return onClickFlask(index);\n          },\n          total: data.flaskTotal[index],\n          ball: i,\n          config: config\n        }, i.toString() + index);\n      });\n    } else return _jsx(ActivityIndicator, {});\n  }, [data, game, config, onClickFlask, checkedData, clickedBall]);\n  var winHandler = useCallback(function () {\n    if (Object.values(checkedData).length && Object.values(checkedData).every(function (i) {\n      return i === true;\n    })) {\n      setModalVisible(true);\n    }\n  }, [checkedData, setModalVisible]);\n  var onClickNext = useCallback(function () {\n    setModalVisible(false);\n    onNext();\n  }, [setModalVisible, onNext]);\n  useEffect(init, [level]);\n  useEffect(gameHandler, [game]);\n  useEffect(dataHandler, [data == null ? void 0 : data.mixedData]);\n  useEffect(winHandler, [checkedData]);\n  return _jsxs(\"div\", {\n    children: [_jsx(ReactHowler, {\n      src: jumpBall,\n      playing: jump\n    }), modalVisible && _jsx(WinModal, {\n      onClickNext: onClickNext,\n      modalVisible: modalVisible\n    }), viewData]\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Containers/Game.js"],"names":["useCallback","useEffect","useMemo","useState","GameClass","Flask","WinModal","jumpBall","ReactHowler","Game","level","onNext","effect","data","setData","jump","setJump","modalVisible","setModalVisible","checkedData","setCheckedData","clickedBall","setClickedBall","config","setConfig","game","setGame","init","gameClass","start","currentComplications","gameHandler","dataHandler","mixedData","checkWin","flaskTotal","onClickFlask","index","length","canSet","changeData","JSON","parse","stringify","viewData","map","i","toString","winHandler","Object","values","every","onClickNext"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport GameClass from '../Classes/Game';\r\nimport Flask from '../Components/Flask';\r\nimport WinModal from '../Components/WinModal';\r\nimport jumpBall from '../../assets/jumpBall.wav';\r\nimport ReactHowler from 'react-howler';\r\n\r\nexport default function Game({level, onNext, effect}) {\r\n    const [data, setData] =useState({});\r\n    const [jump, setJump] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [checkedData, setCheckedData] =useState({});\r\n    const [clickedBall, setClickedBall] = useState('');\r\n    const [config, setConfig] = useState({});\r\n    const [game, setGame] = useState(false);\r\n\r\n    const init = useCallback(()=> {\r\n        setData({});\r\n        setCheckedData({});\r\n        setClickedBall('');\r\n        setConfig({});\r\n        const gameClass = new GameClass();\r\n        gameClass.start(level);\r\n        setGame(gameClass);\r\n        if (gameClass){\r\n            setData(gameClass.data);\r\n            setConfig(gameClass.currentComplications);\r\n        }\r\n    }, [level, setGame, setData, setCheckedData, setClickedBall, setConfig]);\r\n\r\n    const gameHandler = useCallback(()=> {\r\n        if (game){\r\n            setData(game.data);\r\n            setConfig(game.currentComplications);\r\n        }\r\n    }, [game, setData]);\r\n\r\n    const dataHandler = useCallback(()=> {\r\n        if (data?.mixedData){\r\n            setCheckedData(game.checkWin(data.mixedData, data.flaskTotal))\r\n        }\r\n    }, [data, setCheckedData]);\r\n\r\n    const onClickFlask = useCallback((index)=>{\r\n        setJump(false);\r\n        if (clickedBall === '' && data.mixedData[index].length){\r\n            setClickedBall(index);\r\n        } else if(clickedBall !== '' && clickedBall === index){\r\n            setClickedBall('');\r\n        } else if (clickedBall !== '' && game.canSet(index)){\r\n            setJump(effect && true);\r\n            game.changeData(clickedBall, index);\r\n            setData(JSON.parse(JSON.stringify(game.data)));\r\n            setClickedBall('');\r\n        }\r\n    }, [clickedBall, data, setClickedBall, setData, game, effect]);\r\n\r\n    const viewData = useMemo(()=> {\r\n        if (data?.mixedData){\r\n            return data?.mixedData.map((i, index) => {\r\n                return <Flask\r\n                    clickedBall={clickedBall === index}\r\n                    isSuccess={checkedData[index]}\r\n                    onClick={() => onClickFlask(index)} \r\n                    total={data.flaskTotal[index]}\r\n                    key={i.toString() + index} \r\n                    ball={i}\r\n                    config={config} \r\n                   />\r\n            });\r\n        } else return <ActivityIndicator />;\r\n    }, [data, game, config, onClickFlask, checkedData, clickedBall]);\r\n\r\n    const winHandler = useCallback(()=> {\r\n        if (Object.values(checkedData).length && Object.values(checkedData).every(i=> i === true)){\r\n            setModalVisible(true);\r\n        }\r\n    }, [checkedData, setModalVisible]);\r\n    \r\n    const onClickNext = useCallback(()=>{\r\n        setModalVisible(false);\r\n        onNext();\r\n    }, [setModalVisible, onNext]);\r\n\r\n    useEffect(init, [level]);\r\n    useEffect(gameHandler, [game]);\r\n    useEffect(dataHandler, [data?.mixedData]);\r\n    useEffect(winHandler, [checkedData])\r\n\r\n    return (\r\n        <div>\r\n            <ReactHowler src={jumpBall} playing={jump}  />\r\n            {modalVisible && <WinModal onClickNext={onClickNext} modalVisible={modalVisible} />}\r\n            {viewData}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}