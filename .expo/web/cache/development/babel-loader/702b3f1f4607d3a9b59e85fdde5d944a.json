{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar useStorage = function useStorage() {\n  var storeData = function storeData(key, value) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getData = function getData() {\n    var value;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@storage_Key'));\n\n          case 3:\n            value = _context2.sent;\n            return _context2.abrupt(\"return\", value);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return {\n    storeData: storeData,\n    getData: getData\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Hooks/useStorage.js"],"names":["AsyncStorage","useStorage","storeData","key","value","setItem","getData","getItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAEC,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACtB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENJ,YAAY,CAACK,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAFM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAOA,MAAME,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYN,YAAY,CAACO,OAAb,CAAqB,cAArB,CAFZ;;AAAA;AAEFH,YAAAA,KAFE;AAAA,8CAGDA,KAHC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQD,SAAO;AAAEF,IAAAA,SAAS,EAATA,SAAF;AAAaI,IAAAA,OAAO,EAAPA;AAAb,GAAP;AACD,CAjBD;;AAmBA,eAAeL,UAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n const useStorage = () => {\r\n    const storeData = async (key, value) => {\r\n        try {\r\n          await AsyncStorage.setItem(key, value)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n    const getData = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('@storage_Key')\r\n            return value;\r\n        } catch(e) {\r\n            // error reading value\r\n        }\r\n    }\r\n   return { storeData, getData };\r\n };\r\n \r\n export default useStorage;"]},"metadata":{},"sourceType":"module"}