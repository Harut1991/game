{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"text\", \"renderContent\", \"showKnob\", \"showDivider\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { isEmpty } from 'lodash';\nimport React, { useMemo } from 'react';\nimport View from \"../../components/view\";\nimport DialogText from \"./DialogText\";\nimport DialogKnob from \"./DialogKnob\";\nimport DialogDivider from \"./DialogDivider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DialogHeader = function DialogHeader() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _props$text = props.text,\n      text = _props$text === void 0 ? {} : _props$text,\n      renderContent = props.renderContent,\n      _props$showKnob = props.showKnob,\n      showKnob = _props$showKnob === void 0 ? true : _props$showKnob,\n      _props$showDivider = props.showDivider,\n      showDivider = _props$showDivider === void 0 ? true : _props$showDivider,\n      others = _objectWithoutProperties(props, _excluded);\n\n  var _renderContent = useMemo(function () {\n    if (renderContent) {\n      return renderContent(props);\n    }\n\n    return _jsx(DialogText, {\n      text: text\n    });\n  }, [renderContent, text]);\n\n  if (!isEmpty(props)) {\n    return _jsxs(View, _objectSpread(_objectSpread({}, others), {}, {\n      children: [_jsx(DialogKnob, {\n        showKnob: showKnob\n      }), _renderContent, _jsx(DialogDivider, {\n        showDivider: showDivider\n      })]\n    }));\n  }\n\n  return null;\n};\n\nexport default DialogHeader;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/incubator/Dialog/DialogHeader.js"],"names":["isEmpty","React","useMemo","View","DialogText","DialogKnob","DialogDivider","DialogHeader","props","text","renderContent","showKnob","showDivider","others","_renderContent"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AACnC,oBAMIA,KANJ,CACEC,IADF;AAAA,MACEA,IADF,4BACS,EADT;AAAA,MAEEC,aAFF,GAMIF,KANJ,CAEEE,aAFF;AAAA,wBAMIF,KANJ,CAGEG,QAHF;AAAA,MAGEA,QAHF,gCAGa,IAHb;AAAA,2BAMIH,KANJ,CAIEI,WAJF;AAAA,MAIEA,WAJF,mCAIgB,IAJhB;AAAA,MAKKC,MALL,4BAMIL,KANJ;;AAQA,MAAMM,cAAc,GAAGZ,OAAO,CAAC,YAAM;AACnC,QAAIQ,aAAJ,EAAmB;AACjB,aAAOA,aAAa,CAACF,KAAD,CAApB;AACD;;AAED,WAAO,KAAC,UAAD;AAAY,MAAA,IAAI,EAAEC;AAAlB,MAAP;AACD,GAN6B,EAM3B,CAACC,aAAD,EAAgBD,IAAhB,CAN2B,CAA9B;;AAQA,MAAI,CAACT,OAAO,CAACQ,KAAD,CAAZ,EAAqB;AACnB,WAAO,MAAC,IAAD,kCAAUK,MAAV;AAAA,iBACH,KAAC,UAAD;AAAY,QAAA,QAAQ,EAAEF;AAAtB,QADG,EAEFG,cAFE,EAGH,KAAC,aAAD;AAAe,QAAA,WAAW,EAAEF;AAA5B,QAHG;AAAA,OAAP;AAKD;;AAED,SAAO,IAAP;AACD,CA1BD;;AA4BA,eAAeL,YAAf","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useMemo } from 'react';\nimport View from \"../../components/view\";\nimport DialogText from \"./DialogText\";\nimport DialogKnob from \"./DialogKnob\";\nimport DialogDivider from \"./DialogDivider\";\n\nconst DialogHeader = (props = {}) => {\n  const {\n    text = {},\n    renderContent,\n    showKnob = true,\n    showDivider = true,\n    ...others\n  } = props;\n\n  const _renderContent = useMemo(() => {\n    if (renderContent) {\n      return renderContent(props);\n    }\n\n    return <DialogText text={text} />; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderContent, text]);\n\n  if (!isEmpty(props)) {\n    return <View {...others}>\n        <DialogKnob showKnob={showKnob} />\n        {_renderContent}\n        <DialogDivider showDivider={showDivider} />\n      </View>;\n  }\n\n  return null;\n};\n\nexport default DialogHeader;"]},"metadata":{},"sourceType":"module"}