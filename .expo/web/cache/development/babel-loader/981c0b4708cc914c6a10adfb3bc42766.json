{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport useMiddleIndex from \"./helpers/useListMiddleIndex\";\n\nvar usePresenter = function usePresenter(_ref) {\n  var initialValue = _ref.initialValue,\n      selectedValue = _ref.selectedValue,\n      children = _ref.children,\n      propItems = _ref.items,\n      itemHeight = _ref.itemHeight,\n      preferredNumVisibleRows = _ref.preferredNumVisibleRows;\n  var value = !_.isUndefined(selectedValue) ? selectedValue : initialValue;\n\n  var extractItemsFromChildren = function extractItemsFromChildren() {\n    var items = React.Children.map(children, function (child) {\n      var childAsType = {\n        value: child == null ? void 0 : child.props.value,\n        label: child == null ? void 0 : child.props.label\n      };\n      return childAsType;\n    });\n    return items || [];\n  };\n\n  var items = children ? extractItemsFromChildren() : propItems || [];\n  var middleIndex = useMiddleIndex({\n    itemHeight: itemHeight,\n    listSize: items.length\n  });\n\n  var getSelectedValueIndex = function getSelectedValueIndex() {\n    if (_.isString(value) || _.isNumber(value)) {\n      return _.findIndex(items, {\n        value: value\n      });\n    }\n\n    return _.findIndex(items, {\n      value: value == null ? void 0 : value.value\n    });\n  };\n\n  var shouldControlComponent = function shouldControlComponent(offset) {\n    if (!_.isUndefined(selectedValue)) {\n      return offset >= 0 && selectedValue !== getRowItemAtOffset(offset).value;\n    }\n\n    return false;\n  };\n\n  var getRowItemAtOffset = function getRowItemAtOffset(offset) {\n    var index = middleIndex(offset);\n    var value = items[index].value;\n    return {\n      index: index,\n      value: value\n    };\n  };\n\n  return {\n    shouldControlComponent: shouldControlComponent,\n    index: getSelectedValueIndex(),\n    items: items,\n    height: itemHeight * preferredNumVisibleRows,\n    getRowItemAtOffset: getRowItemAtOffset\n  };\n};\n\nexport default usePresenter;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/incubator/WheelPicker/usePresenter.js"],"names":["_","React","useMiddleIndex","usePresenter","initialValue","selectedValue","children","propItems","items","itemHeight","preferredNumVisibleRows","value","isUndefined","extractItemsFromChildren","Children","map","child","childAsType","props","label","middleIndex","listSize","length","getSelectedValueIndex","isString","isNumber","findIndex","shouldControlComponent","offset","getRowItemAtOffset","index","height"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAOf;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,aAKI,QALJA,aAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHGC,SAGH,QAHJC,KAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,uBACI,QADJA,uBACI;AACJ,MAAMC,KAAK,GAAG,CAACX,CAAC,CAACY,WAAF,CAAcP,aAAd,CAAD,GAAgCA,aAAhC,GAAgDD,YAA9D;;AAEA,MAAMS,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,QAAML,KAAK,GAAGP,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBT,QAAnB,EAA6B,UAAAU,KAAK,EAAI;AAClD,UAAMC,WAAW,GAAG;AAClBN,QAAAA,KAAK,EAAEK,KAAF,oBAAEA,KAAK,CAAEE,KAAP,CAAaP,KADF;AAElBQ,QAAAA,KAAK,EAAEH,KAAF,oBAAEA,KAAK,CAAEE,KAAP,CAAaC;AAFF,OAApB;AAIA,aAAOF,WAAP;AACD,KANa,CAAd;AAOA,WAAOT,KAAK,IAAI,EAAhB;AACD,GATD;;AAWA,MAAMA,KAAK,GAAGF,QAAQ,GAAGO,wBAAwB,EAA3B,GAAgCN,SAAS,IAAI,EAAnE;AACA,MAAMa,WAAW,GAAGlB,cAAc,CAAC;AACjCO,IAAAA,UAAU,EAAVA,UADiC;AAEjCY,IAAAA,QAAQ,EAAEb,KAAK,CAACc;AAFiB,GAAD,CAAlC;;AAKA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAIvB,CAAC,CAACwB,QAAF,CAAWb,KAAX,KAAqBX,CAAC,CAACyB,QAAF,CAAWd,KAAX,CAAzB,EAA4C;AAC1C,aAAOX,CAAC,CAAC0B,SAAF,CAAYlB,KAAZ,EAAmB;AACxBG,QAAAA,KAAK,EAALA;AADwB,OAAnB,CAAP;AAGD;;AAED,WAAOX,CAAC,CAAC0B,SAAF,CAAYlB,KAAZ,EAAmB;AACxBG,MAAAA,KAAK,EAAEA,KAAF,oBAAEA,KAAK,CAAEA;AADU,KAAnB,CAAP;AAGD,GAVD;;AAYA,MAAMgB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,MAAM,EAAI;AACvC,QAAI,CAAC5B,CAAC,CAACY,WAAF,CAAcP,aAAd,CAAL,EAAmC;AACjC,aAAOuB,MAAM,IAAI,CAAV,IAAevB,aAAa,KAAKwB,kBAAkB,CAACD,MAAD,CAAlB,CAA2BjB,KAAnE;AACD;;AAED,WAAO,KAAP;AACD,GAND;;AAQA,MAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,MAAM,EAAI;AACnC,QAAME,KAAK,GAAGV,WAAW,CAACQ,MAAD,CAAzB;AACA,QAAMjB,KAAK,GAAGH,KAAK,CAACsB,KAAD,CAAL,CAAanB,KAA3B;AACA,WAAO;AACLmB,MAAAA,KAAK,EAALA,KADK;AAELnB,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GAPD;;AASA,SAAO;AACLgB,IAAAA,sBAAsB,EAAtBA,sBADK;AAELG,IAAAA,KAAK,EAAEP,qBAAqB,EAFvB;AAGLf,IAAAA,KAAK,EAALA,KAHK;AAILuB,IAAAA,MAAM,EAAEtB,UAAU,GAAGC,uBAJhB;AAKLmB,IAAAA,kBAAkB,EAAlBA;AALK,GAAP;AAOD,CA/DD;;AAiEA,eAAe1B,YAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport useMiddleIndex from \"./helpers/useListMiddleIndex\";\n\nconst usePresenter = ({\n  initialValue,\n  selectedValue,\n  children,\n  items: propItems,\n  itemHeight,\n  preferredNumVisibleRows\n}) => {\n  const value = !_.isUndefined(selectedValue) ? selectedValue : initialValue;\n\n  const extractItemsFromChildren = () => {\n    const items = React.Children.map(children, child => {\n      const childAsType = {\n        value: child?.props.value,\n        label: child?.props.label\n      };\n      return childAsType;\n    });\n    return items || [];\n  };\n\n  const items = children ? extractItemsFromChildren() : propItems || [];\n  const middleIndex = useMiddleIndex({\n    itemHeight,\n    listSize: items.length\n  });\n\n  const getSelectedValueIndex = () => {\n    if (_.isString(value) || _.isNumber(value)) {\n      return _.findIndex(items, {\n        value\n      });\n    }\n\n    return _.findIndex(items, {\n      value: value?.value\n    });\n  };\n\n  const shouldControlComponent = offset => {\n    if (!_.isUndefined(selectedValue)) {\n      return offset >= 0 && selectedValue !== getRowItemAtOffset(offset).value;\n    }\n\n    return false;\n  };\n\n  const getRowItemAtOffset = offset => {\n    const index = middleIndex(offset);\n    const value = items[index].value;\n    return {\n      index,\n      value\n    };\n  };\n\n  return {\n    shouldControlComponent,\n    index: getSelectedValueIndex(),\n    items,\n    height: itemHeight * preferredNumVisibleRows,\n    getRowItemAtOffset\n  };\n};\n\nexport default usePresenter;"]},"metadata":{},"sourceType":"module"}