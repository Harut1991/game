{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"data\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _pt from \"prop-types\";\nimport React from 'react';\nimport { SvgPackage } from \"../../optionalDependencies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SvgXml = SvgPackage == null ? void 0 : SvgPackage.SvgXml;\nvar SvgCssUri = SvgPackage == null ? void 0 : SvgPackage.SvgCssUri;\n\nfunction isSvgUri(source) {\n  var _source$uri;\n\n  return typeof source === 'object' && (source == null ? void 0 : (_source$uri = source.uri) == null ? void 0 : _source$uri.endsWith('.svg'));\n}\n\nexport function isSvg(source) {\n  return typeof source === 'string' || typeof source === 'function' || isSvgUri(source);\n}\n\nfunction SvgImage(props) {\n  var data = props.data,\n      others = _objectWithoutProperties(props, _excluded);\n\n  if (!SvgXml) {\n    console.error(\"RNUILib Image \\\"svg\\\" prop requires installing \\\"react-native-svg\\\" and \\\"react-native-svg-transformer\\\" dependencies\");\n    return null;\n  }\n\n  if (isSvgUri(data)) {\n    return _jsx(SvgCssUri, _objectSpread(_objectSpread({}, others), {}, {\n      uri: data.uri\n    }));\n  } else if (typeof data === 'string') {\n    return _jsx(SvgXml, _objectSpread({\n      xml: data\n    }, others));\n  } else if (data) {\n    var File = data;\n    return _jsx(File, _objectSpread({}, others));\n  }\n\n  return null;\n}\n\nSvgImage.propTypes = {\n  data: _pt.any.isRequired\n};\nSvgImage.displayName = 'IGNORE';\nSvgImage.isSvg = isSvg;\nexport default SvgImage;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/components/image/SvgImage.js"],"names":["_pt","React","SvgPackage","SvgXml","SvgCssUri","isSvgUri","source","uri","endsWith","isSvg","SvgImage","props","data","others","console","error","File","propTypes","any","isRequired","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT;;AACA,IAAMC,MAAM,GAAGD,UAAH,oBAAGA,UAAU,CAAEC,MAA3B;AACA,IAAMC,SAAS,GAAGF,UAAH,oBAAGA,UAAU,CAAEE,SAA9B;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAA;;AAExB,SAAO,OAAOA,MAAP,KAAkB,QAAlB,KAA8BA,MAA9B,mCAA8BA,MAAM,CAAEC,GAAtC,qBAA8B,YAAaC,QAAb,CAAsB,MAAtB,CAA9B,CAAP;AACD;;AAED,OAAO,SAASC,KAAT,CAAeH,MAAf,EAAuB;AAC5B,SAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,UAAhD,IAA8DD,QAAQ,CAACC,MAAD,CAA7E;AACD;;AAED,SAASI,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MACEC,IADF,GAGID,KAHJ,CACEC,IADF;AAAA,MAEKC,MAFL,4BAGIF,KAHJ;;AAKA,MAAI,CAACR,MAAL,EAAa;AAEXW,IAAAA,OAAO,CAACC,KAAR;AACA,WAAO,IAAP;AACD;;AAED,MAAIV,QAAQ,CAACO,IAAD,CAAZ,EAAoB;AAClB,WAAO,KAAC,SAAD,kCAAeC,MAAf;AAAuB,MAAA,GAAG,EAAED,IAAI,CAACL;AAAjC,OAAP;AACD,GAFD,MAEO,IAAI,OAAOK,IAAP,KAAgB,QAApB,EAA8B;AACnC,WAAO,KAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb,OAAuBC,MAAvB,EAAP;AACD,GAFM,MAEA,IAAID,IAAJ,EAAU;AACf,QAAMI,IAAI,GAAGJ,IAAb;AAEA,WAAO,KAAC,IAAD,oBAAUC,MAAV,EAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAEDH,QAAQ,CAACO,SAAT,GAAqB;AACnBL,EAAAA,IAAI,EAAEZ,GAAG,CAACkB,GAAJ,CAAQC;AADK,CAArB;AAGAT,QAAQ,CAACU,WAAT,GAAuB,QAAvB;AACAV,QAAQ,CAACD,KAAT,GAAiBA,KAAjB;AACA,eAAeC,QAAf","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport { SvgPackage } from \"../../optionalDependencies\";\nconst SvgXml = SvgPackage?.SvgXml;\nconst SvgCssUri = SvgPackage?.SvgCssUri; // const SvgProps = SvgPackage?.SvgProps; TODO: not sure how (or if) we can use their props\n\nfunction isSvgUri(source) {\n  // @ts-expect-error\n  return typeof source === 'object' && source?.uri?.endsWith('.svg');\n}\n\nexport function isSvg(source) {\n  return typeof source === 'string' || typeof source === 'function' || isSvgUri(source);\n}\n\nfunction SvgImage(props) {\n  const {\n    data,\n    ...others\n  } = props;\n\n  if (!SvgXml) {\n    // eslint-disable-next-line max-len\n    console.error(`RNUILib Image \"svg\" prop requires installing \"react-native-svg\" and \"react-native-svg-transformer\" dependencies`);\n    return null;\n  }\n\n  if (isSvgUri(data)) {\n    return <SvgCssUri {...others} uri={data.uri} />;\n  } else if (typeof data === 'string') {\n    return <SvgXml xml={data} {...others} />;\n  } else if (data) {\n    const File = data; // Must be with capital letter\n\n    return <File {...others} />;\n  }\n\n  return null;\n}\n\nSvgImage.propTypes = {\n  data: _pt.any.isRequired\n};\nSvgImage.displayName = 'IGNORE';\nSvgImage.isSvg = isSvg;\nexport default SvgImage;"]},"metadata":{},"sourceType":"module"}