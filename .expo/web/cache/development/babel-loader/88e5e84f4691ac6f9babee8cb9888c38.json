{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { runOnJS } from 'react-native-reanimated';\nexport default function useAnimationEndNotifier(props) {\n  var onAnimationEnd = props.onAnimationEnd;\n  var onEnterAnimationEnd = useCallback(function (isFinished) {\n    'worklet';\n\n    if (onAnimationEnd && isFinished) {\n      runOnJS(onAnimationEnd)('enter');\n    }\n  }, [onAnimationEnd]);\n  var onExitAnimationEnd = useCallback(function (isFinished) {\n    'worklet';\n\n    if (onAnimationEnd && isFinished) {\n      runOnJS(onAnimationEnd)('exit');\n    }\n  }, [onAnimationEnd]);\n  return {\n    onEnterAnimationEnd: onEnterAnimationEnd,\n    onExitAnimationEnd: onExitAnimationEnd\n  };\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/incubator/TransitionView/useAnimationEndNotifier.js"],"names":["React","useCallback","runOnJS","useAnimationEndNotifier","props","onAnimationEnd","onEnterAnimationEnd","isFinished","onExitAnimationEnd"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACrD,MACEC,cADF,GAEID,KAFJ,CACEC,cADF;AAGA,MAAMC,mBAAmB,GAAGL,WAAW,CAAC,UAAAM,UAAU,EAAI;AACpD;;AAEA,QAAIF,cAAc,IAAIE,UAAtB,EAAkC;AAChCL,MAAAA,OAAO,CAACG,cAAD,CAAP,CAAwB,OAAxB;AACD;AACF,GANsC,EAMpC,CAACA,cAAD,CANoC,CAAvC;AAOA,MAAMG,kBAAkB,GAAGP,WAAW,CAAC,UAAAM,UAAU,EAAI;AACnD;;AAEA,QAAIF,cAAc,IAAIE,UAAtB,EAAkC;AAChCL,MAAAA,OAAO,CAACG,cAAD,CAAP,CAAwB,MAAxB;AACD;AACF,GANqC,EAMnC,CAACA,cAAD,CANmC,CAAtC;AAOA,SAAO;AACLC,IAAAA,mBAAmB,EAAnBA,mBADK;AAELE,IAAAA,kBAAkB,EAAlBA;AAFK,GAAP;AAID","sourcesContent":["import React, { useCallback } from 'react';\nimport { runOnJS } from 'react-native-reanimated';\nexport default function useAnimationEndNotifier(props) {\n  const {\n    onAnimationEnd\n  } = props;\n  const onEnterAnimationEnd = useCallback(isFinished => {\n    'worklet';\n\n    if (onAnimationEnd && isFinished) {\n      runOnJS(onAnimationEnd)('enter');\n    }\n  }, [onAnimationEnd]);\n  const onExitAnimationEnd = useCallback(isFinished => {\n    'worklet';\n\n    if (onAnimationEnd && isFinished) {\n      runOnJS(onAnimationEnd)('exit');\n    }\n  }, [onAnimationEnd]);\n  return {\n    onEnterAnimationEnd,\n    onExitAnimationEnd\n  };\n}"]},"metadata":{},"sourceType":"module"}