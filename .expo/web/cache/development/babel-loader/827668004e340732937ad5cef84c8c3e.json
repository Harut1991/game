{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport GameClass from \"../Classes/Game\";\nimport Flask from \"../Components/Flask\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Game(_ref) {\n  var level = _ref.level;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clickedBall = _useState4[0],\n      setClickedBall = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      config = _useState6[0],\n      setConfig = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      game = _useState8[0],\n      setGame = _useState8[1];\n\n  var init = useCallback(function () {\n    var gameClass = new GameClass();\n    gameClass.start(level);\n    setGame(gameClass);\n  }, [level, setGame]);\n  var dataHandler = useCallback(function () {\n    if (game) {\n      setData(game.data);\n      setConfig(game.currentComplications);\n      checkWin(game.data);\n    }\n  }, [game, setData]);\n  var checkWin = useCallback(function (initData) {\n    var mixedData = initData ? initData.mixedData : data.mixedData;\n    var flaskTotal = initData ? initData.flaskTotal : data.flaskTotal;\n    console.log(game.checkWin(mixedData, flaskTotal));\n  }, [game, data]);\n  var onClickFlask = useCallback(function (index) {\n    if (clickedBall === '' && data.mixedData[index].length) {\n      setClickedBall(index);\n    } else if (clickedBall !== '' && clickedBall === index) {\n      setClickedBall('');\n    } else if (clickedBall !== '' && game.canSet(index)) {\n      game.changeData(clickedBall, index);\n      setData(game.data);\n      setClickedBall('');\n    }\n  }, [clickedBall, data, setClickedBall, setData, game]);\n  var viewData = useMemo(function () {\n    if (data != null && data.mixedData) {\n      return data == null ? void 0 : data.mixedData.map(function (i, index) {\n        return _jsx(Flask, {\n          onClick: function onClick() {\n            return onClickFlask(index);\n          },\n          total: data.flaskTotal[index],\n          ball: i,\n          config: config\n        }, i.toString() + index);\n      });\n    } else return _jsx(ActivityIndicator, {});\n  }, [data, game, config, onClickFlask]);\n  useEffect(init, [level]);\n  useEffect(dataHandler, [game]);\n  return _jsx(\"div\", {\n    className: \"game-container\",\n    children: viewData\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Containers/Game.js"],"names":["useCallback","useEffect","useMemo","useState","GameClass","Flask","Game","level","data","setData","clickedBall","setClickedBall","config","setConfig","game","setGame","init","gameClass","start","dataHandler","currentComplications","checkWin","initData","mixedData","flaskTotal","console","log","onClickFlask","index","length","canSet","changeData","viewData","map","i","toString"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport GameClass from '../Classes/Game';\r\nimport Flask from '../Components/Flask';\r\n\r\nexport default function Game({level}) {\r\n    const [data, setData] =useState({});\r\n    const [clickedBall, setClickedBall] = useState('');\r\n    const [config, setConfig] = useState({});\r\n    const [game, setGame] = useState(false);\r\n\r\n    const init = useCallback(()=> {\r\n        const gameClass = new GameClass();\r\n        gameClass.start(level);\r\n        setGame(gameClass);\r\n    }, [level, setGame]);\r\n\r\n    const dataHandler = useCallback(()=> {\r\n        if (game){\r\n            setData(game.data);\r\n            setConfig(game.currentComplications);\r\n            checkWin(game.data);\r\n        }\r\n    }, [game, setData]);\r\n\r\n    const checkWin = useCallback((initData)=> {\r\n        const mixedData = initData ? initData.mixedData : data.mixedData;\r\n        const flaskTotal = initData ? initData.flaskTotal : data.flaskTotal;\r\n        console.log(game.checkWin(mixedData, flaskTotal))\r\n    }, [game, data]);\r\n\r\n    const onClickFlask=useCallback((index)=>{\r\n        if (clickedBall === '' && data.mixedData[index].length){\r\n            setClickedBall(index);\r\n        } else if(clickedBall !== '' && clickedBall === index){\r\n            setClickedBall('');\r\n        } else if (clickedBall !== '' && game.canSet(index)){\r\n            game.changeData(clickedBall, index);\r\n            setData(game.data);\r\n            setClickedBall('');\r\n        }\r\n    }, [clickedBall, data, setClickedBall, setData, game]);\r\n\r\n    const viewData = useMemo(()=> {\r\n        if (data?.mixedData){\r\n            return data?.mixedData.map((i, index) => {\r\n                return <Flask onClick={() => onClickFlask(index)} total={data.flaskTotal[index]} key={i.toString() + index} ball={i} config={config} />\r\n            });\r\n        } else return <ActivityIndicator />;\r\n    }, [data, game, config, onClickFlask]);\r\n\r\n    useEffect(init, [level]);\r\n    useEffect(dataHandler, [game]);\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            {viewData}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}