{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport GameClass from \"../Classes/Game\";\nimport Flask from \"../Components/Flask\";\nimport WinModal from \"../Components/WinModal\";\nimport jumpBall from \"../../assets/jumpBall.wav\";\nimport row from \"../../assets/row.wav\";\nimport win from \"../../assets/win.wav\";\nimport ReactHowler from 'react-howler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Game(_ref) {\n  var level = _ref.level,\n      onNext = _ref.onNext,\n      effect = _ref.effect;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldCheckedData = _useState4[0],\n      setOldCheckedData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clickedBall = _useState6[0],\n      setClickedBall = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkedData = _useState8[0],\n      setCheckedData = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rowFill = _useState10[0],\n      setRowFill = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      config = _useState12[0],\n      setConfig = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jump = _useState14[0],\n      setJump = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      winS = _useState16[0],\n      setWinS = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      game = _useState18[0],\n      setGame = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      data = _useState20[0],\n      setData = _useState20[1];\n\n  var init = useCallback(function () {\n    setOldCheckedData({});\n    setCheckedData({});\n    setRowFill(false);\n    setClickedBall('');\n    setConfig({});\n    setJump(false);\n    setWinS(false);\n    setData({});\n    var gameClass = new GameClass();\n    gameClass.start(level);\n    setGame(gameClass);\n\n    if (gameClass) {\n      setData(gameClass.data);\n      setConfig(gameClass.currentComplications);\n    }\n\n    setJump(false);\n  }, [level, setGame, setData, setCheckedData, setOldCheckedData, setClickedBall, setConfig, setRowFill, setWinS]);\n  var gameHandler = useCallback(function () {\n    if (game) {\n      setData(game.data);\n      setConfig(game.currentComplications);\n    }\n  }, [game, setData]);\n  var dataHandler = useCallback(function () {\n    if (data != null && data.mixedData) {\n      setCheckedData(game.checkWin(data.mixedData, data.flaskTotal));\n      setOldCheckedData(checkedData);\n    }\n  }, [data, setCheckedData, setOldCheckedData, checkedData]);\n  var onClickFlask = useCallback(function (index) {\n    setJump(false);\n    setRowFill(false);\n\n    if (clickedBall === '' && data.mixedData[index].length) {\n      setClickedBall(index);\n    } else if (clickedBall !== '' && clickedBall === index) {\n      setClickedBall('');\n    } else if (clickedBall !== '' && game.canSet(index)) {\n      setJump(effect && true);\n      game.changeData(clickedBall, index);\n      setData(JSON.parse(JSON.stringify(game.data)));\n      setClickedBall('');\n    }\n  }, [clickedBall, data, setClickedBall, setData, game, effect, setJump, setRowFill]);\n  var viewData = useMemo(function () {\n    if (data != null && data.mixedData) {\n      return data == null ? void 0 : data.mixedData.map(function (i, index) {\n        return _jsx(Flask, {\n          clickedBall: clickedBall === index,\n          isSuccess: checkedData[index],\n          onClick: function onClick() {\n            return onClickFlask(index);\n          },\n          total: data.flaskTotal[index],\n          ball: i,\n          config: config\n        }, i.toString() + index);\n      });\n    } else return _jsx(ActivityIndicator, {});\n  }, [data, game, config, onClickFlask, checkedData, clickedBall]);\n  var winHandler = useCallback(function () {\n    setRowFill(false);\n    setWinS(false);\n    var values = Object.values(checkedData);\n    var oldValues = Object.values(oldCheckedData);\n\n    if (values.length) {\n      if (values.every(function (i) {\n        return i === true;\n      })) {\n        setJump(false);\n        setWinS(effect);\n        setModalVisible(true);\n      } else {\n        var rowFilled = values.some(function (i, index) {\n          return i !== oldValues[index] && i;\n        });\n\n        if (rowFilled) {\n          setRowFill(effect);\n        }\n      }\n    }\n  }, [checkedData, setModalVisible, oldCheckedData, setRowFill, effect, setJump, setWinS]);\n  var onClickNext = useCallback(function () {\n    setModalVisible(false);\n    onNext();\n  }, [setModalVisible, onNext]);\n  useEffect(init, [level]);\n  useEffect(gameHandler, [game]);\n  useEffect(dataHandler, [data == null ? void 0 : data.mixedData]);\n  useEffect(winHandler, [checkedData]);\n  return _jsxs(\"div\", {\n    children: [effect && _jsxs(_Fragment, {\n      children: [jump && _jsx(ReactHowler, {\n        src: jumpBall,\n        playing: jump,\n        volume: 0.2\n      }), rowFill && _jsx(ReactHowler, {\n        src: row,\n        playing: rowFill\n      }), winS && _jsx(ReactHowler, {\n        src: win,\n        playing: winS\n      })]\n    }), modalVisible && _jsx(WinModal, {\n      onClickNext: onClickNext,\n      modalVisible: modalVisible\n    }), viewData]\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Containers/Game.js"],"names":["useCallback","useEffect","useMemo","useState","GameClass","Flask","WinModal","jumpBall","row","win","ReactHowler","Game","level","onNext","effect","modalVisible","setModalVisible","oldCheckedData","setOldCheckedData","clickedBall","setClickedBall","checkedData","setCheckedData","rowFill","setRowFill","config","setConfig","jump","setJump","winS","setWinS","game","setGame","data","setData","init","gameClass","start","currentComplications","gameHandler","dataHandler","mixedData","checkWin","flaskTotal","onClickFlask","index","length","canSet","changeData","JSON","parse","stringify","viewData","map","i","toString","winHandler","values","Object","oldValues","every","rowFilled","some","onClickNext"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport GameClass from '../Classes/Game';\r\nimport Flask from '../Components/Flask';\r\nimport WinModal from '../Components/WinModal';\r\nimport jumpBall from '../../assets/jumpBall.wav';\r\nimport row from '../../assets/row.wav';\r\nimport win from '../../assets/win.wav';\r\nimport ReactHowler from 'react-howler';\r\n\r\nexport default function Game({level, onNext, effect}) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [oldCheckedData, setOldCheckedData] =useState({});\r\n    const [clickedBall, setClickedBall] = useState('');\r\n    const [checkedData, setCheckedData] =useState({});\r\n    const [rowFill, setRowFill] = useState(false);\r\n    const [config, setConfig] = useState({});\r\n    const [jump, setJump] = useState(false);\r\n    const [winS, setWinS] = useState(false);\r\n    const [game, setGame] = useState(false);\r\n    const [data, setData] =useState({});\r\n    \r\n    const init = useCallback(()=> {\r\n        setOldCheckedData({});\r\n        setCheckedData({});\r\n        setRowFill(false);\r\n        setClickedBall('');\r\n        setConfig({});\r\n        setJump(false);\r\n        setWinS(false);\r\n        setData({});\r\n        \r\n        \r\n        \r\n        \r\n        const gameClass = new GameClass();\r\n        gameClass.start(level);\r\n        setGame(gameClass);\r\n        if (gameClass){\r\n            setData(gameClass.data);\r\n            setConfig(gameClass.currentComplications);\r\n        }\r\n        setJump(false);\r\n    }, [level, setGame, setData, setCheckedData,setOldCheckedData, setClickedBall, setConfig, setRowFill, setWinS]);\r\n\r\n    const gameHandler = useCallback(()=> {\r\n        if (game){\r\n            setData(game.data);\r\n            setConfig(game.currentComplications);\r\n        }\r\n    }, [game, setData]);\r\n\r\n    const dataHandler = useCallback(()=> {\r\n        if (data?.mixedData){\r\n            setCheckedData(game.checkWin(data.mixedData, data.flaskTotal));\r\n            setOldCheckedData(checkedData);\r\n        }\r\n    }, [data, setCheckedData, setOldCheckedData, checkedData]);\r\n\r\n    const onClickFlask = useCallback((index)=>{\r\n        setJump(false);\r\n        setRowFill(false);\r\n        if (clickedBall === '' && data.mixedData[index].length){\r\n            setClickedBall(index);\r\n        } else if(clickedBall !== '' && clickedBall === index){\r\n            setClickedBall('');\r\n        } else if (clickedBall !== '' && game.canSet(index)){\r\n            setJump(effect && true);\r\n            game.changeData(clickedBall, index);\r\n            setData(JSON.parse(JSON.stringify(game.data)));\r\n            setClickedBall('');\r\n        }\r\n    }, [clickedBall, data, setClickedBall, setData, game, effect, setJump, setRowFill]);\r\n\r\n    const viewData = useMemo(()=> {\r\n        if (data?.mixedData){\r\n            return data?.mixedData.map((i, index) => {\r\n                return <Flask\r\n                    clickedBall={clickedBall === index}\r\n                    isSuccess={checkedData[index]}\r\n                    onClick={() => onClickFlask(index)} \r\n                    total={data.flaskTotal[index]}\r\n                    key={i.toString() + index} \r\n                    ball={i}\r\n                    config={config} \r\n                   />\r\n            });\r\n        } else return <ActivityIndicator />;\r\n    }, [data, game, config, onClickFlask, checkedData, clickedBall]);\r\n\r\n    const winHandler = useCallback(()=> {\r\n        setRowFill(false);\r\n        setWinS(false);\r\n        const values = Object.values(checkedData);\r\n        const oldValues = Object.values(oldCheckedData);\r\n        if (values.length){\r\n            if (values.every(i=> i === true)) {\r\n                setJump(false);\r\n                setWinS(effect);\r\n                setModalVisible(true);\r\n            } else {\r\n                const rowFilled = values.some((i, index) => i !== oldValues[index] && i);\r\n                if (rowFilled){\r\n                    setRowFill(effect);\r\n                }\r\n            }\r\n        }\r\n    }, [checkedData, setModalVisible, oldCheckedData,setRowFill, effect, setJump, setWinS]);\r\n    \r\n    const onClickNext = useCallback(()=>{\r\n        setModalVisible(false);\r\n        onNext();\r\n    }, [setModalVisible, onNext]);\r\n\r\n    useEffect(init, [level]);\r\n    useEffect(gameHandler, [game]);\r\n    useEffect(dataHandler, [data?.mixedData]);\r\n    useEffect(winHandler, [checkedData])\r\n\r\n    return (\r\n        <div>\r\n            {effect && (<>\r\n                {jump && <ReactHowler src={jumpBall} playing={jump} volume={0.2}  />}\r\n                {rowFill && <ReactHowler src={row} playing={rowFill}  />}\r\n                {winS && <ReactHowler src={win} playing={winS}  />}\r\n            </>)}\r\n            {modalVisible && <WinModal onClickNext={onClickNext} modalVisible={modalVisible} />}\r\n            {viewData}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}