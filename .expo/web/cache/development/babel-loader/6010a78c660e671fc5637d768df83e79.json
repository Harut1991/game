{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport SettingsModal from \"./SettingsModal\";\nimport ReactHowler from 'react-howler';\nimport newSound from \"../../assets/sound.mp3\";\nimport useStorage from \"../Hooks/useStorage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Header(_ref) {\n  var level = _ref.level,\n      effect = _ref.effect,\n      setEffect = _ref.setEffect;\n\n  var _useStorage = useStorage(),\n      getData = _useStorage.getData,\n      storeData = _useStorage.storeData;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  var onSound = useCallback(function () {\n    storeData('sound', !sound);\n    setSound(!sound);\n  }, [setSound, sound, storeData]);\n  var onEffect = useCallback(function () {\n    storeData('effect', !effect);\n    setEffect(!effect);\n  }, [setEffect, effect, storeData]);\n  var soundChangeHandler = useCallback(function () {}, [sound]);\n  useEffect(soundChangeHandler, [sound]);\n  useEffect(function () {\n    getData('sound').then(function (t) {\n      return setSound(t === 'true');\n    });\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(ReactHowler, {\n      src: newSound,\n      playing: sound,\n      volume: 0.5,\n      loop: true\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(View, {\n        onClick: function onClick() {\n          return setModalVisible(true);\n        },\n        children: \"settings\"\n      }), _jsx(View, {\n        children: level ? \"Level \" + level : ''\n      }), _jsx(View, {\n        children: \"x\"\n      })]\n    }), modalVisible && _jsx(SettingsModal, {\n      sound: sound,\n      effect: effect,\n      onSound: onSound,\n      onEffect: onEffect,\n      setModalVisible: setModalVisible,\n      modalVisible: modalVisible\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    paddingTop: '4vh',\n    height: '8vh',\n    flex: 3,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Components/Header.js"],"names":["React","useCallback","useEffect","useState","SettingsModal","ReactHowler","newSound","useStorage","Header","level","effect","setEffect","getData","storeData","modalVisible","setModalVisible","sound","setSound","onSound","onEffect","soundChangeHandler","then","t","styles","header","StyleSheet","create","paddingTop","height","flex","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\r\nimport SettingsModal from './SettingsModal';\r\nimport ReactHowler from 'react-howler';\r\nimport newSound from '../../assets/sound.mp3';\r\nimport useStorage from '../Hooks/useStorage';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\n\r\nexport default function Header({level, effect, setEffect}) {\r\n    const {getData, storeData} = useStorage();\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [sound, setSound] = useState(false);\r\n\r\n    const onSound = useCallback(() => {\r\n        storeData('sound', !sound);\r\n        setSound(!sound);\r\n    }, [setSound, sound, storeData]);\r\n\r\n    const onEffect = useCallback(() => {\r\n        storeData('effect', !effect);\r\n        setEffect(!effect);\r\n    }, [setEffect, effect, storeData]);\r\n\r\n    const soundChangeHandler = useCallback(()=> {\r\n        \r\n    }, [sound]);\r\n\r\n    useEffect(soundChangeHandler, [sound]);\r\n    useEffect(() => {\r\n        getData('sound').then(t => setSound(t === 'true'))\r\n      }, []);\r\n      \r\n    return (\r\n        <View>\r\n            <ReactHowler src={newSound} playing={sound} volume={0.5} loop />\r\n            <View style={styles.header}>\r\n                <View onClick={() => setModalVisible(true)}>settings</View>\r\n                <View>{level ? `Level ${level}`: ''}</View>\r\n                <View>x</View>\r\n            </View>\r\n            {modalVisible && <SettingsModal \r\n                sound={sound}\r\n                effect={effect}\r\n                onSound={onSound}\r\n                onEffect={onEffect} \r\n                setModalVisible={setModalVisible} \r\n                modalVisible={modalVisible}\r\n              />}\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        paddingTop: '4vh',\r\n        height: '8vh',\r\n        flex: 3,\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}