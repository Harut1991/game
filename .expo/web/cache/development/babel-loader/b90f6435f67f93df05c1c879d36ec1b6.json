{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { Constants } from \"../../commons/new\";\nexport var PanningDirectionsEnum;\n\n(function (PanningDirectionsEnum) {\n  PanningDirectionsEnum[\"UP\"] = \"up\";\n  PanningDirectionsEnum[\"DOWN\"] = \"down\";\n  PanningDirectionsEnum[\"LEFT\"] = \"left\";\n  PanningDirectionsEnum[\"RIGHT\"] = \"right\";\n})(PanningDirectionsEnum || (PanningDirectionsEnum = {}));\n\nexport function getTranslationDirectionClamp(translation, options) {\n  'worklet';\n\n  var result = translation;\n\n  if (options.directionLock) {\n    if (options.currentTranslation.x !== 0) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else if (options.currentTranslation.y !== 0) {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    } else if (Math.abs(translation.x) > Math.abs(translation.y)) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    }\n  }\n\n  return result;\n}\nexport function getTranslation(event, initialTranslation, directions, options) {\n  'worklet';\n\n  var result = {\n    x: 0,\n    y: 0\n  };\n\n  if (directions != null && directions.includes(PanningDirectionsEnum.LEFT) && directions != null && directions.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = initialTranslation.x + event.translationX;\n  } else if (directions != null && directions.includes(PanningDirectionsEnum.LEFT)) {\n    result.x = Math.min(0, initialTranslation.x + event.translationX);\n  } else if (directions != null && directions.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = Math.max(0, initialTranslation.x + event.translationX);\n  }\n\n  if (directions != null && directions.includes(PanningDirectionsEnum.UP) && directions != null && directions.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = initialTranslation.y + event.translationY;\n  } else if (directions != null && directions.includes(PanningDirectionsEnum.UP)) {\n    result.y = Math.min(0, initialTranslation.y + event.translationY);\n  } else if (directions != null && directions.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = Math.max(0, initialTranslation.y + event.translationY);\n  }\n\n  return getTranslationDirectionClamp(result, options);\n}\nexport var DEFAULT_THRESHOLD = {\n  velocity: 750,\n  x: Constants.screenWidth / 4,\n  y: Constants.screenHeight / 4\n};\n\nfunction getVelocityDirectionClamp(event, directions) {\n  'worklet';\n\n  var x = 0,\n      y = 0;\n\n  if (directions.includes(PanningDirectionsEnum.LEFT) && event.velocityX < 0 || directions.includes(PanningDirectionsEnum.RIGHT) && event.velocityX > 0) {\n    x = event.velocityX;\n  }\n\n  if (directions.includes(PanningDirectionsEnum.UP) && event.velocityY < 0 || directions.includes(PanningDirectionsEnum.DOWN) && event.velocityY > 0) {\n    y = event.velocityY;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction checkThresholds(directions, velocity, threshold, options) {\n  'worklet';\n\n  var velocityPassedThreshold = velocity > threshold.velocity;\n  var xPassedThreshold = directions.includes(PanningDirectionsEnum.RIGHT) && options.currentTranslation.x > threshold.x || directions.includes(PanningDirectionsEnum.LEFT) && -options.currentTranslation.x > threshold.x;\n  var yPassedThreshold = directions.includes(PanningDirectionsEnum.DOWN) && options.currentTranslation.y > threshold.y || directions.includes(PanningDirectionsEnum.UP) && -options.currentTranslation.y > threshold.y;\n  return {\n    velocityPassedThreshold: velocityPassedThreshold,\n    xPassedThreshold: xPassedThreshold,\n    yPassedThreshold: yPassedThreshold\n  };\n}\n\nexport function getDismissVelocity(event, directions, options, threshold) {\n  'worklet';\n\n  var _threshold = _extends({}, DEFAULT_THRESHOLD, threshold);\n\n  var clampedVelocity = getVelocityDirectionClamp(event, directions);\n  var velocity = Math.sqrt(Math.pow(clampedVelocity.x, 2) + Math.pow(clampedVelocity.y, 2));\n\n  var _checkThresholds = checkThresholds(directions, velocity, _threshold, options),\n      velocityPassedThreshold = _checkThresholds.velocityPassedThreshold,\n      xPassedThreshold = _checkThresholds.xPassedThreshold,\n      yPassedThreshold = _checkThresholds.yPassedThreshold;\n\n  if (velocityPassedThreshold || xPassedThreshold || yPassedThreshold) {\n    var _velocity = {};\n\n    if (velocityPassedThreshold) {\n      _velocity = {\n        x: event.velocityX,\n        y: event.velocityY\n      };\n    } else if (event.translationX && event.translationY) {\n      if (Math.abs(event.translationX) > Math.abs(event.translationY)) {\n        _velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n        _velocity.y = _threshold.velocity * event.translationY / Math.abs(event.translationX);\n      } else {\n        _velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n        _velocity.x = _threshold.velocity * event.translationX / Math.abs(event.translationY);\n      }\n    } else if (event.translationX) {\n      _velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n    } else {\n      _velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n    }\n\n    if (options.directionLock) {\n      if (options.currentTranslation.x !== 0) {\n        _velocity.y = 0;\n      } else if (options.currentTranslation.y !== 0) {\n        _velocity.x = 0;\n      }\n    }\n\n    return _velocity;\n  }\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js"],"names":["Constants","PanningDirectionsEnum","getTranslationDirectionClamp","translation","options","result","directionLock","currentTranslation","x","y","Math","abs","getTranslation","event","initialTranslation","directions","includes","LEFT","RIGHT","translationX","min","max","UP","DOWN","translationY","DEFAULT_THRESHOLD","velocity","screenWidth","screenHeight","getVelocityDirectionClamp","velocityX","velocityY","checkThresholds","threshold","velocityPassedThreshold","xPassedThreshold","yPassedThreshold","getDismissVelocity","_threshold","clampedVelocity","sqrt","pow","sign"],"mappings":"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","sourcesContent":["import { Constants } from \"../../commons/new\";\nexport let PanningDirectionsEnum;\n\n(function (PanningDirectionsEnum) {\n  PanningDirectionsEnum[\"UP\"] = \"up\";\n  PanningDirectionsEnum[\"DOWN\"] = \"down\";\n  PanningDirectionsEnum[\"LEFT\"] = \"left\";\n  PanningDirectionsEnum[\"RIGHT\"] = \"right\";\n})(PanningDirectionsEnum || (PanningDirectionsEnum = {}));\n\nexport function getTranslationDirectionClamp(translation, options) {\n  'worklet';\n\n  let result = translation;\n\n  if (options.directionLock) {\n    if (options.currentTranslation.x !== 0) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else if (options.currentTranslation.y !== 0) {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    } else if (Math.abs(translation.x) > Math.abs(translation.y)) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    }\n  }\n\n  return result;\n}\nexport function getTranslation(event, initialTranslation, directions, options) {\n  'worklet';\n\n  const result = {\n    x: 0,\n    y: 0\n  };\n\n  if (directions?.includes(PanningDirectionsEnum.LEFT) && directions?.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = initialTranslation.x + event.translationX;\n  } else if (directions?.includes(PanningDirectionsEnum.LEFT)) {\n    result.x = Math.min(0, initialTranslation.x + event.translationX);\n  } else if (directions?.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = Math.max(0, initialTranslation.x + event.translationX);\n  }\n\n  if (directions?.includes(PanningDirectionsEnum.UP) && directions?.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = initialTranslation.y + event.translationY;\n  } else if (directions?.includes(PanningDirectionsEnum.UP)) {\n    result.y = Math.min(0, initialTranslation.y + event.translationY);\n  } else if (directions?.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = Math.max(0, initialTranslation.y + event.translationY);\n  }\n\n  return getTranslationDirectionClamp(result, options);\n}\nexport const DEFAULT_THRESHOLD = {\n  velocity: 750,\n  x: Constants.screenWidth / 4,\n  y: Constants.screenHeight / 4\n};\n\nfunction getVelocityDirectionClamp(event, directions) {\n  'worklet';\n\n  let x = 0,\n      y = 0;\n\n  if (directions.includes(PanningDirectionsEnum.LEFT) && event.velocityX < 0 || directions.includes(PanningDirectionsEnum.RIGHT) && event.velocityX > 0) {\n    x = event.velocityX;\n  }\n\n  if (directions.includes(PanningDirectionsEnum.UP) && event.velocityY < 0 || directions.includes(PanningDirectionsEnum.DOWN) && event.velocityY > 0) {\n    y = event.velocityY;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction checkThresholds(directions, velocity, threshold, options) {\n  'worklet';\n\n  const velocityPassedThreshold = velocity > threshold.velocity;\n  const xPassedThreshold = directions.includes(PanningDirectionsEnum.RIGHT) && options.currentTranslation.x > threshold.x || directions.includes(PanningDirectionsEnum.LEFT) && -options.currentTranslation.x > threshold.x;\n  const yPassedThreshold = directions.includes(PanningDirectionsEnum.DOWN) && options.currentTranslation.y > threshold.y || directions.includes(PanningDirectionsEnum.UP) && -options.currentTranslation.y > threshold.y;\n  return {\n    velocityPassedThreshold,\n    xPassedThreshold,\n    yPassedThreshold\n  };\n}\n/**\n * Will return undefined if should not dismiss\n */\n\n\nexport function getDismissVelocity(event, directions, options, threshold) {\n  'worklet';\n\n  const _threshold = Object.assign({}, DEFAULT_THRESHOLD, threshold);\n\n  const clampedVelocity = getVelocityDirectionClamp(event, directions);\n  const velocity = Math.sqrt(Math.pow(clampedVelocity.x, 2) + Math.pow(clampedVelocity.y, 2));\n  const {\n    velocityPassedThreshold,\n    xPassedThreshold,\n    yPassedThreshold\n  } = checkThresholds(directions, velocity, _threshold, options);\n\n  if (velocityPassedThreshold || xPassedThreshold || yPassedThreshold) {\n    let velocity = {};\n\n    if (velocityPassedThreshold) {\n      velocity = {\n        x: event.velocityX,\n        y: event.velocityY\n      };\n    } else if (event.translationX && event.translationY) {\n      if (Math.abs(event.translationX) > Math.abs(event.translationY)) {\n        velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n        velocity.y = _threshold.velocity * event.translationY / Math.abs(event.translationX);\n      } else {\n        velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n        velocity.x = _threshold.velocity * event.translationX / Math.abs(event.translationY);\n      }\n    } else if (event.translationX) {\n      velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n    } else {\n      velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n    }\n\n    if (options.directionLock) {\n      if (options.currentTranslation.x !== 0) {\n        velocity.y = 0;\n      } else if (options.currentTranslation.y !== 0) {\n        velocity.x = 0;\n      }\n    }\n\n    return velocity;\n  }\n}"]},"metadata":{},"sourceType":"module"}