{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport SettingsModal from \"./SettingsModal\";\nimport { Howl, Howler } from 'howler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar sounds = new Howl({\n  src: ['./assets/sound.mp3']\n});\nexport default function Header(_ref) {\n  var level = _ref.level;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(localStorage.getItem('sound') === 'true'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  var _useState5 = useState(localStorage.getItem('effect') === 'true'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      effect = _useState6[0],\n      setEffect = _useState6[1];\n\n  var onSound = useCallback(function () {\n    localStorage.setItem('sound', !sound);\n    setSound(!sound);\n  }, [setSound, sound]);\n  var onEffect = useCallback(function () {\n    localStorage.setItem('effect', !effect);\n    setEffect(!effect);\n  }, [setEffect, effect]);\n  var soundChangeHandler = useCallback(function () {\n    sounds.once('load', function () {\n      console.log(sounds);\n      sounds.play();\n    });\n  }, [sound]);\n  useEffect(soundChangeHandler, [sound]);\n  return _jsxs(\"div\", {\n    children: [_jsxs(\"div\", {\n      className: \"header\",\n      children: [_jsx(\"div\", {\n        onClick: function onClick() {\n          return setModalVisible(true);\n        },\n        children: \"settings\"\n      }), _jsx(\"div\", {\n        children: level ? level : ''\n      }), _jsx(\"div\", {\n        children: \"x\"\n      })]\n    }), modalVisible && _jsx(SettingsModal, {\n      sound: sound,\n      effect: effect,\n      onSound: onSound,\n      onEffect: onEffect,\n      setModalVisible: setModalVisible,\n      modalVisible: modalVisible\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Components/Header.js"],"names":["React","useCallback","useEffect","useState","SettingsModal","Howl","Howler","sounds","src","Header","level","modalVisible","setModalVisible","localStorage","getItem","sound","setSound","effect","setEffect","onSound","setItem","onEffect","soundChangeHandler","once","console","log","play"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,6BAAjD;AACA,OAAOC,aAAP;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,QAA3B;;;AACA,IAAIC,MAAM,GAAG,IAAIF,IAAJ,CAAS;AAClBG,EAAAA,GAAG,EAAE,CAAC,oBAAD;AADa,CAAT,CAAb;AAIA,eAAe,SAASC,MAAT,OAAyB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AACpC,kBAAwCP,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA0BT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAnC,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA4Bb,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmC,MAApC,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,OAAO,GAAGlB,WAAW,CAAC,YAAM;AAC9BY,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8B,CAACL,KAA/B;AACAC,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAH0B,EAGxB,CAACC,QAAD,EAAWD,KAAX,CAHwB,CAA3B;AAKA,MAAMM,QAAQ,GAAGpB,WAAW,CAAC,YAAM;AAC/BY,IAAAA,YAAY,CAACO,OAAb,CAAqB,QAArB,EAA+B,CAACH,MAAhC;AACAC,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAH2B,EAGzB,CAACC,SAAD,EAAYD,MAAZ,CAHyB,CAA5B;AAKA,MAAMK,kBAAkB,GAAGrB,WAAW,CAAC,YAAK;AAExCM,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB,YAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACAA,MAAAA,MAAM,CAACmB,IAAP;AACH,KAHD;AAIH,GANqC,EAMnC,CAACX,KAAD,CANmC,CAAtC;AAQAb,EAAAA,SAAS,CAACoB,kBAAD,EAAqB,CAACP,KAAD,CAArB,CAAT;AAEA,SACI;AAAA,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACI;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMH,eAAe,CAAC,IAAD,CAArB;AAAA,SAAd;AAAA;AAAA,QADJ,EAEI;AAAA,kBAAMF,KAAK,GAAGA,KAAH,GAAU;AAArB,QAFJ,EAGI;AAAA;AAAA,QAHJ;AAAA,MAFJ,EAOKC,YAAY,IAAI,KAAC,aAAD;AACb,MAAA,KAAK,EAAEI,KADM;AAEb,MAAA,MAAM,EAAEE,MAFK;AAGb,MAAA,OAAO,EAAEE,OAHI;AAIb,MAAA,QAAQ,EAAEE,QAJG;AAKb,MAAA,eAAe,EAAET,eALJ;AAMb,MAAA,YAAY,EAAED;AAND,MAPrB;AAAA,IADJ;AAkBH","sourcesContent":["import React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\r\nimport SettingsModal from './SettingsModal';\r\nimport {Howl, Howler} from 'howler';\r\nvar sounds = new Howl({\r\n    src: ['./assets/sound.mp3']\r\n  });\r\n\r\nexport default function Header({level}) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [sound, setSound] = useState(localStorage.getItem('sound') === 'true');\r\n    const [effect, setEffect] = useState(localStorage.getItem('effect') === 'true');\r\n\r\n    const onSound = useCallback(() => {\r\n        localStorage.setItem('sound', !sound);\r\n        setSound(!sound);\r\n    }, [setSound, sound]);\r\n\r\n    const onEffect = useCallback(() => {\r\n        localStorage.setItem('effect', !effect);\r\n        setEffect(!effect);\r\n    }, [setEffect, effect]);\r\n\r\n    const soundChangeHandler = useCallback(()=> {\r\n        \r\n        sounds.once('load', function(){\r\n            console.log(sounds)\r\n            sounds.play();\r\n        });\r\n    }, [sound]);\r\n\r\n    useEffect(soundChangeHandler, [sound]);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='header'>\r\n                <div onClick={() => setModalVisible(true)}>settings</div>\r\n                <div>{level ? level: ''}</div>\r\n                <div>x</div>\r\n            </div>\r\n            {modalVisible && <SettingsModal \r\n                sound={sound}\r\n                effect={effect}\r\n                onSound={onSound}\r\n                onEffect={onEffect} \r\n                setModalVisible={setModalVisible} \r\n                modalVisible={modalVisible}\r\n              />}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}