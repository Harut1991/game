{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"testID\", \"index\", \"lazy\", \"renderLoading\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useContext, useState, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Reanimated, { useAnimatedStyle, useAnimatedReaction, runOnJS } from 'react-native-reanimated';\nimport { Freeze } from 'react-freeze';\nimport TabBarContext from \"./TabBarContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TabPage(_ref) {\n  var testID = _ref.testID,\n      index = _ref.index,\n      lazy = _ref.lazy,\n      renderLoading = _ref.renderLoading,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(TabBarContext),\n      currentPage = _useContext.currentPage,\n      asCarousel = _useContext.asCarousel,\n      containerWidth = _useContext.containerWidth;\n\n  var _useState = useState(!lazy),\n      _useState2 = _slicedToArray(_useState, 2),\n      shouldLoad = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var lazyLoad = useCallback(function () {\n    if (lazy && !shouldLoad) {\n      setLoaded(true);\n    }\n  }, [lazy, shouldLoad]);\n  useAnimatedReaction(function () {\n    return currentPage.value;\n  }, function (currentPage, previousPage) {\n    var isActive = currentPage === index;\n    var wasActive = previousPage === index;\n    var nearActive = asCarousel && (currentPage - 1 === index || currentPage + 1 === index);\n    var wasNearActive = asCarousel && previousPage !== null && (previousPage - 1 === index || previousPage + 1 === index);\n\n    if (isActive) {\n      runOnJS(lazyLoad)();\n    }\n\n    if (isActive || nearActive) {\n      runOnJS(setFocused)(true);\n    } else if (wasActive || wasNearActive) {\n      runOnJS(setFocused)(false);\n    }\n  }, [currentPage]);\n  var animatedPageStyle = useAnimatedStyle(function () {\n    var isActive = Math.round(currentPage.value) === index;\n    return {\n      opacity: isActive || asCarousel ? 1 : 0,\n      zIndex: isActive || asCarousel ? 1 : 0\n    };\n  });\n  var style = useMemo(function () {\n    return [!asCarousel && styles.page, animatedPageStyle, {\n      width: asCarousel ? containerWidth : undefined\n    }];\n  }, [asCarousel, animatedPageStyle, containerWidth]);\n  return _jsxs(Reanimated.View, {\n    style: style,\n    testID: testID,\n    children: [!shouldLoad && (renderLoading == null ? void 0 : renderLoading()), _jsx(Freeze, {\n      freeze: !shouldLoad || !focused,\n      children: props.children\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  page: _objectSpread({}, StyleSheet.absoluteFillObject)\n});","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/node_modules/react-native-ui-lib/src/components/tabController/TabPage.js"],"names":["React","useCallback","useContext","useState","useMemo","Reanimated","useAnimatedStyle","useAnimatedReaction","runOnJS","Freeze","TabBarContext","TabPage","testID","index","lazy","renderLoading","props","currentPage","asCarousel","containerWidth","shouldLoad","setLoaded","focused","setFocused","lazyLoad","value","previousPage","isActive","wasActive","nearActive","wasNearActive","animatedPageStyle","Math","round","opacity","zIndex","style","styles","page","width","undefined","children","StyleSheet","create","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Reanimated, { useAnimatedStyle, useAnimatedReaction, runOnJS } from 'react-native-reanimated';\nimport { Freeze } from 'react-freeze';\nimport TabBarContext from \"./TabBarContext\";\n\n/**\n * @description: TabController's TabPage\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n */\nexport default function TabPage({\n  testID,\n  index,\n  lazy,\n  renderLoading,\n  ...props\n}) {\n  const {\n    currentPage,\n    asCarousel,\n    containerWidth\n  } = useContext(TabBarContext);\n  const [shouldLoad, setLoaded] = useState(!lazy);\n  const [focused, setFocused] = useState(false);\n  const lazyLoad = useCallback(() => {\n    if (lazy && !shouldLoad) {\n      setLoaded(true);\n    }\n  }, [lazy, shouldLoad]);\n  useAnimatedReaction(() => {\n    return currentPage.value;\n  }, (currentPage, previousPage) => {\n    const isActive = currentPage === index;\n    const wasActive = previousPage === index;\n    const nearActive = asCarousel && (currentPage - 1 === index || currentPage + 1 === index);\n    const wasNearActive = asCarousel && previousPage !== null && (previousPage - 1 === index || previousPage + 1 === index);\n\n    if (isActive) {\n      runOnJS(lazyLoad)();\n    }\n\n    if (isActive || nearActive) {\n      runOnJS(setFocused)(true);\n    } else if (wasActive || wasNearActive) {\n      runOnJS(setFocused)(false);\n    }\n  }, [currentPage]);\n  const animatedPageStyle = useAnimatedStyle(() => {\n    const isActive = Math.round(currentPage.value) === index;\n    return {\n      opacity: isActive || asCarousel ? 1 : 0,\n      zIndex: isActive || asCarousel ? 1 : 0\n    };\n  });\n  const style = useMemo(() => {\n    return [!asCarousel && styles.page, animatedPageStyle, {\n      width: asCarousel ? containerWidth : undefined\n    }];\n  }, [asCarousel, animatedPageStyle, containerWidth]);\n  return <Reanimated.View style={style} testID={testID}>\n      {!shouldLoad && renderLoading?.()}\n      {\n      /* {shouldLoad && props.children} */\n    }\n      <Freeze freeze={!shouldLoad || !focused}>{props.children}</Freeze>\n    </Reanimated.View>;\n}\nconst styles = StyleSheet.create({\n  page: { ...StyleSheet.absoluteFillObject\n  }\n});"]},"metadata":{},"sourceType":"module"}