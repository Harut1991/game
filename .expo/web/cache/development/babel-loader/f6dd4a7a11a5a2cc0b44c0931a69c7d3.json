{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport SettingsModal from \"./SettingsModal\";\nimport ReactHowler from 'react-howler';\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Header(_ref) {\n  var level = _ref.level;\n  var audio = useRef(new Audio.Sound());\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(localStorage.getItem('sound') === 'true'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  var _useState5 = useState(localStorage.getItem('effect') === 'true'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      effect = _useState6[0],\n      setEffect = _useState6[1];\n\n  var playSound = function playSound() {\n    var checkLoaded;\n    return _regeneratorRuntime.async(function playSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Loading Sound\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(audio.current.createAsync(require(\"./assets/Ayo.mp3\")));\n\n          case 3:\n            console.log(\"playing sound\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(audio.current.getStatusAsync());\n\n          case 6:\n            checkLoaded = _context.sent;\n\n            if (!(checkLoaded.isLoaded === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            console.log(\"Error in Loading mp3\");\n            _context.next = 13;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(audio.current.playAsync());\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    return function () {\n      return audio.current.unloadAsync();\n    };\n  }, []);\n  var onSound = useCallback(function () {\n    localStorage.setItem('sound', !sound);\n    setSound(!sound);\n  }, [setSound, sound]);\n  var onEffect = useCallback(function () {\n    localStorage.setItem('effect', !effect);\n    setEffect(!effect);\n  }, [setEffect, effect]);\n  var soundChangeHandler = useCallback(function () {\n    playSound();\n  }, [sound]);\n  useEffect(soundChangeHandler, [sound]);\n  return _jsxs(\"div\", {\n    children: [_jsx(ReactHowler, {\n      src: \"./assets/sound.mp3\",\n      playing: sound\n    }), _jsxs(\"div\", {\n      className: \"header\",\n      children: [_jsx(\"div\", {\n        onClick: function onClick() {\n          return setModalVisible(true);\n        },\n        children: \"settings\"\n      }), _jsx(\"div\", {\n        children: level ? level : ''\n      }), _jsx(\"div\", {\n        children: \"x\"\n      })]\n    }), modalVisible && _jsx(SettingsModal, {\n      sound: sound,\n      effect: effect,\n      onSound: onSound,\n      onEffect: onEffect,\n      setModalVisible: setModalVisible,\n      modalVisible: modalVisible\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Components/Header.js"],"names":["React","useCallback","useEffect","useState","SettingsModal","ReactHowler","Audio","Header","level","audio","useRef","Sound","modalVisible","setModalVisible","localStorage","getItem","sound","setSound","effect","setEffect","playSound","console","log","current","createAsync","require","getStatusAsync","checkLoaded","isLoaded","playAsync","unloadAsync","onSound","setItem","onEffect","soundChangeHandler"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\r\nimport SettingsModal from './SettingsModal';\r\nimport ReactHowler from 'react-howler';\r\nimport { Audio } from 'expo-av';\r\n\r\n\r\nexport default function Header({level}) {\r\n    const audio = useRef(new Audio.Sound());\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [sound, setSound] = useState(localStorage.getItem('sound') === 'true');\r\n    const [effect, setEffect] = useState(localStorage.getItem('effect') === 'true');\r\n\r\n    const playSound = async () => {\r\n        console.log(\"Loading Sound\");\r\n    \r\n        await audio.current.createAsync(require(\"./assets/Ayo.mp3\"));\r\n    \r\n        console.log(\"playing sound\");\r\n    \r\n        const checkLoaded = await audio.current.getStatusAsync();\r\n        if (checkLoaded.isLoaded === true) {\r\n          console.log(\"Error in Loading mp3\");\r\n        } else {\r\n          await audio.current.playAsync();\r\n        }\r\n      };\r\n\r\n      useEffect(() => {\r\n        return () => audio.current.unloadAsync();\r\n      }, []);\r\n\r\n    const onSound = useCallback(() => {\r\n        localStorage.setItem('sound', !sound);\r\n        setSound(!sound);\r\n    }, [setSound, sound]);\r\n\r\n    const onEffect = useCallback(() => {\r\n        localStorage.setItem('effect', !effect);\r\n        setEffect(!effect);\r\n    }, [setEffect, effect]);\r\n\r\n    const soundChangeHandler = useCallback(()=> {\r\n        playSound()\r\n    }, [sound]);\r\n\r\n    useEffect(soundChangeHandler, [sound]);\r\n\r\n    return (\r\n        <div>\r\n            <ReactHowler src='./assets/sound.mp3' playing={sound} />\r\n            <div className='header'>\r\n                <div onClick={() => setModalVisible(true)}>settings</div>\r\n                <div>{level ? level: ''}</div>\r\n                <div>x</div>\r\n            </div>\r\n            {modalVisible && <SettingsModal \r\n                sound={sound}\r\n                effect={effect}\r\n                onSound={onSound}\r\n                onEffect={onEffect} \r\n                setModalVisible={setModalVisible} \r\n                modalVisible={modalVisible}\r\n              />}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}