{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport GameClass from \"../Classes/Game\";\nimport Flask from \"../Components/Flask\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Game(_ref) {\n  var level = _ref.level;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      game = _useState4[0],\n      setGame = _useState4[1];\n\n  var init = useCallback(function () {\n    var gameClass = new GameClass();\n    gameClass.start(level);\n    setGame(gameClass);\n  }, [level, setGame]);\n  var dataHandler = useCallback(function () {\n    if (game) {\n      setData(game.data);\n    }\n  }, [game, setData]);\n  var viewData = useMemo(function () {\n    if (data != null && data.mixedData) {\n      return data == null ? void 0 : data.mixedData.map(function (i) {\n        return _jsx(Flask, {\n          ball: i\n        });\n      });\n      console.log(data == null ? void 0 : data.mixedData);\n    } else return _jsx(ActivityIndicator, {});\n  }, [data]);\n  useEffect(init, [level]);\n  useEffect(dataHandler, [game]);\n  return _jsx(View, {\n    className: \"game-container\",\n    children: viewData\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Harut/game-expo/src/Containers/Game.js"],"names":["useCallback","useEffect","useMemo","useState","GameClass","Flask","Game","level","data","setData","game","setGame","init","gameClass","start","dataHandler","viewData","mixedData","map","i","console","log"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;;;AAEA,OAAOC,SAAP;AACA,OAAOC,KAAP;;AAEA,eAAe,SAASC,IAAT,OAAuB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAClC,kBAAuBJ,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBN,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,IAAI,GAAGZ,WAAW,CAAC,YAAK;AAC1B,QAAMa,SAAS,GAAG,IAAIT,SAAJ,EAAlB;AACAS,IAAAA,SAAS,CAACC,KAAV,CAAgBP,KAAhB;AACAI,IAAAA,OAAO,CAACE,SAAD,CAAP;AACH,GAJuB,EAIrB,CAACN,KAAD,EAAQI,OAAR,CAJqB,CAAxB;AAMA,MAAMI,WAAW,GAAGf,WAAW,CAAC,YAAK;AACjC,QAAIU,IAAJ,EAAS;AACLD,MAAAA,OAAO,CAACC,IAAI,CAACF,IAAN,CAAP;AACH;AACJ,GAJ8B,EAI5B,CAACE,IAAD,EAAOD,OAAP,CAJ4B,CAA/B;AAMA,MAAMO,QAAQ,GAAGd,OAAO,CAAC,YAAK;AAC1B,QAAIM,IAAJ,YAAIA,IAAI,CAAES,SAAV,EAAoB;AAChB,aAAOT,IAAP,oBAAOA,IAAI,CAAES,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAC5B,eAAO,KAAC,KAAD;AAAO,UAAA,IAAI,EAAEA;AAAb,UAAP;AACH,OAFM,CAAP;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,oBAAYA,IAAI,CAAES,SAAlB;AACH,KALD,MAKO,OAAO,KAAC,iBAAD,KAAP;AACV,GAPuB,EAOrB,CAACT,IAAD,CAPqB,CAAxB;AASAP,EAAAA,SAAS,CAACW,IAAD,EAAO,CAACL,KAAD,CAAP,CAAT;AACAN,EAAAA,SAAS,CAACc,WAAD,EAAc,CAACL,IAAD,CAAd,CAAT;AAEA,SACI,KAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,cACKM;AADL,IADJ;AAKH","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { View, ActivityIndicator } from 'react-native';\r\nimport GameClass from '../Classes/Game';\r\nimport Flask from '../Components/Flask';\r\n\r\nexport default function Game({level}) {\r\n    const [data, setData] =useState({});\r\n    const [game, setGame] = useState(false);\r\n\r\n    const init = useCallback(()=> {\r\n        const gameClass = new GameClass();\r\n        gameClass.start(level);\r\n        setGame(gameClass);\r\n    }, [level, setGame]);\r\n\r\n    const dataHandler = useCallback(()=> {\r\n        if (game){\r\n            setData(game.data)\r\n        }\r\n    }, [game, setData]);\r\n\r\n    const viewData = useMemo(()=> {\r\n        if (data?.mixedData){\r\n            return data?.mixedData.map(i => {\r\n                return <Flask ball={i} />\r\n            })\r\n            console.log(data?.mixedData)\r\n        } else return <ActivityIndicator />;\r\n    }, [data]);\r\n\r\n    useEffect(init, [level]);\r\n    useEffect(dataHandler, [game]);\r\n\r\n    return (\r\n        <View className=\"game-container\">\r\n            {viewData}\r\n        </View>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}